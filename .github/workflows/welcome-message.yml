name: Welcome Message

on:
  issues:
    types: [opened]
  pull_request:
    types: [opened]
  pull_request_target:
    types: [opened]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  welcome:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_target' || github.event_name == 'issues'
    steps:
      - name: Welcome new contributor
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const author = context.payload.sender.login;
            
            // Check if this is an issue or pull request
            if (context.eventName === 'issues') {
              const issueNumber = context.payload.issue.number;
              const issueTitle = context.payload.issue.title;
              
              // Check if this is the user's first issue
              const userIssues = await github.rest.search.issuesAndPullRequests({
                q: `repo:${owner}/${repo} author:${author} type:issue`,
                sort: 'created',
                order: 'asc'
              });
              
              let welcomeMessage;
              if (userIssues.data.total_count === 1) {
                // First issue
                welcomeMessage = `👋 Welcome to **${repo}**, @${author}! 
            
            Thank you for creating your first issue! 🎉
            
            Here are a few things to keep in mind:
            - 📋 Please make sure your issue has a clear title and description
            - 🏷️ Add appropriate labels if you have permission
            - 🔍 Check if similar issues already exist
            - 📝 Provide as much context as possible to help us understand the problem
            
            Our team will review your issue soon. Feel free to ask questions or provide additional information! 💬`;
              } else {
                // Returning contributor
                welcomeMessage = `👋 Hello again, @${author}! 
            
            Thanks for creating issue **#${issueNumber}**: "${issueTitle}"
            
            We appreciate your continued contribution to **${repo}**! 🙏
            
            Our team will review this issue and get back to you soon. ⏰`;
              }
              
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: issueNumber,
                body: welcomeMessage
              });
              
              console.log(`✅ Welcome message posted for issue #${issueNumber} by ${author}`);
              
            } else if (context.eventName === 'pull_request') {
              const prNumber = context.payload.pull_request.number;
              const prTitle = context.payload.pull_request.title;
              const isDraft = context.payload.pull_request.draft;
              
              // Check if this is the user's first PR
              const userPRs = await github.rest.search.issuesAndPullRequests({
                q: `repo:${owner}/${repo} author:${author} type:pr`,
                sort: 'created',
                order: 'asc'
              });
              
              let welcomeMessage;
              if (userPRs.data.total_count === 1) {
                // First pull request
                welcomeMessage = `🎉 Welcome to **${repo}**, @${author}! 
            
            Thank you for your first pull request! This is awesome! 🚀
            
            **Pull Request**: #${prNumber} - "${prTitle}"
            ${isDraft ? '📝 **Status**: Draft' : '✅ **Status**: Ready for review'}
            
            Here's what happens next:
            - 🔍 Our team will review your changes
            - 💬 We might ask questions or request changes
            - ✅ Once approved, your contribution will be merged!
            
            **Tips for a smooth review process:**
            - 📋 Make sure your PR description explains what changes you made and why
            - ✅ Ensure all tests pass (if applicable)
            - 📖 Follow our coding standards and contribution guidelines
            - 🔄 Keep your branch up to date with the main branch
            
            Thank you for contributing to open source! 💖`;
              } else {
                // Returning contributor
                welcomeMessage = `👋 Hello again, @${author}! 
            
            Thanks for submitting pull request **#${prNumber}**: "${prTitle}" 🔧
            
            ${isDraft ? '📝 **Status**: Draft - Let us know when it is ready for review!' : '✅ **Status**: Ready for review'}
            
            We appreciate your continued contributions to **${repo}**! 🙏
            
            Our team will review your changes soon. ⏰`;
              }
              
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: prNumber,
                body: welcomeMessage
              });
              
              console.log(`✅ Welcome message posted for PR #${prNumber} by ${author}`);
              
              // Add helpful labels for first-time contributors
              if (userPRs.data.total_count === 1) {
                try {
                  await github.rest.issues.addLabels({
                    owner,
                    repo,
                    issue_number: prNumber,
                    labels: ['first-time-contributor']
                  });
                  console.log(`✅ Added first-time-contributor label to PR #${prNumber}`);
                } catch (labelError) {
                  console.log(`ℹ️ Could not add label (label might not exist): ${labelError.message}`);
                }
              }
            }

name: Code Quality & Formatting

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - '*.js'
      - '*.ts'
      - '*.json'
      - '.github/workflows/code-quality.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - '*.js'
      - '*.ts'
      - '*.json'
      - '.github/workflows/code-quality.yml'
  pull_request_target:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - '*.js'
      - '*.ts'
      - '*.json'
      - '.github/workflows/code-quality.yml'
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to process'
        required: false
      triggered_by:
        description: 'User who triggered this workflow'
        required: false

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  code-quality:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_target' || github.event_name == 'workflow_dispatch' || github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # For pull requests, compare against the base branch
            CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }}...${{ github.event.pull_request.head.sha }})
          else
            # For pushes, compare against the previous commit
            CHANGED_FILES=$(git diff --name-only HEAD~1..HEAD)
          fi
          
          echo "Changed files:"
          echo "$CHANGED_FILES"
          
          # Check if frontend files were changed
          if echo "$CHANGED_FILES" | grep -q "^frontend/"; then
            echo "frontend_changed=true" >> $GITHUB_OUTPUT
          else
            echo "frontend_changed=false" >> $GITHUB_OUTPUT
          fi
          
          # Check if backend files were changed
          if echo "$CHANGED_FILES" | grep -q "^backend/"; then
            echo "backend_changed=true" >> $GITHUB_OUTPUT
          else
            echo "backend_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node.js
        if: steps.changed-files.outputs.frontend_changed == 'true' || steps.changed-files.outputs.backend_changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # Don't cache npm globally - we'll handle it per directory

      - name: Install and check frontend
        if: steps.changed-files.outputs.frontend_changed == 'true'
        run: |
          echo "🔍 Checking frontend code quality..."
          cd frontend
          npm ci
          
          echo "📝 Checking Prettier formatting..."
          npx prettier --check . || {
            echo "❌ Frontend formatting issues found!"
            echo "📋 Files that need formatting:"
            npx prettier --list-different .
            echo ""
            echo "🔧 To fix formatting issues, run:"
            echo "  cd frontend && npx prettier --write ."
            exit 1
          }
          
          echo "🔍 Running ESLint..."
          npm run lint
          
          echo "🔍 Checking TypeScript..."
          npx tsc --noEmit
          
          echo "🧪 Running tests..."
          npm run test:run
          
          echo "✅ Frontend checks passed!"

      - name: Install and check backend
        if: steps.changed-files.outputs.backend_changed == 'true'
        run: |
          echo "🔍 Checking backend code quality..."
          cd backend
          npm ci
          
          echo "📝 Checking Prettier formatting..."
          npm run format:check || {
            echo "❌ Backend formatting issues found!"
            echo "📋 Files that need formatting:"
            npx prettier --list-different .
            echo ""
            echo "🔧 To fix formatting issues, run:"
            echo "  cd backend && npm run format"
            exit 1
          }
          
          echo "✅ Backend checks passed!"

  comment-on-pr:
    runs-on: ubuntu-latest
    needs: code-quality
    if: github.event_name == 'pull_request_target' && (needs.code-quality.result == 'failure' || needs.code-quality.result == 'success')
    steps:
      - name: Comment on PR with quality check results
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo, number } = context.issue;
            const frontendChanged = '${{ needs.code-quality.outputs.frontend_changed }}' === 'true';
            const backendChanged = '${{ needs.code-quality.outputs.backend_changed }}' === 'true';
            const success = '${{ needs.code-quality.result }}' === 'success';
            let message = '## 🔍 Code Quality Check Results\n\n';
            if (frontendChanged) {
              message += success 
                ? '✅ **Frontend**: All quality checks passed!\n'
                : '❌ **Frontend**: Quality checks failed. Please fix the issues above.\n';
            }
            if (backendChanged) {
              message += success 
                ? '✅ **Backend**: All quality checks passed!\n'
                : '❌ **Backend**: Quality checks failed. Please fix the issues above.\n';
            }
            if (!frontendChanged && !backendChanged) {
              message += 'ℹ️ No frontend or backend changes detected.\n';
            }
            if (!success) {
              message += '\n### 🔧 How to fix:\n';
              if (frontendChanged) {
                message += '**Frontend formatting:**\n```bash\ncd frontend\nnpx prettier --write .\nnpm run lint -- --fix\n```\n\n';
              }
              if (backendChanged) {
                message += '**Backend formatting:**\n```bash\ncd backend\nnpm run format\n```\n\n';
              }
            }
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: number,
              body: message
            });

name: Track Contributions

on:
  pull_request:
    types: [closed]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to track (for testing)'
        required: false
        type: string
      username:
        description: 'Username (for testing)'
        required: false
        type: string
      labels:
        description: 'Comma-separated labels (for testing)'
        required: false
        type: string
      process_all_past:
        description: 'Process all past merged PRs'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  pull-requests: read

jobs:
  track-contribution:
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    env:
      # Make token available to all steps and scripts
      GITHUB_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
      PAT_TOKEN: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd .github/scripts
          npm install

      - name: Track contribution
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
          script: |
            const { execSync } = require('child_process');

            console.log('ü§ñ Track Contributions Workflow Started');
            console.log('======================================');
            console.log('Event type:', context.eventName);

            const env = {
              ...process.env,
              GITHUB_TOKEN: process.env.PAT_TOKEN || process.env.GITHUB_TOKEN,
              PAT_TOKEN: process.env.PAT_TOKEN || process.env.GITHUB_TOKEN
            };

            if (context.eventName === 'workflow_dispatch' && context.payload.inputs.process_all_past === 'true') {
              console.log('üîÑ Processing all past merged PRs...');
              try {
                execSync(`cd .github/scripts && node fetch-past-contributions.js`, {
                  stdio: 'inherit',
                  env
                });
                console.log('‚úÖ Past contributions processing completed successfully');
                return;
              } catch (error) {
                console.error('‚ùå Past contributions processing failed:', error.message);
                core.setFailed(`Failed to process past contributions: ${error.message}`);
                return;
              }
            }

            let prNumber, username, labels;
            if (context.eventName === 'workflow_dispatch') {
              prNumber = context.payload.inputs.pr_number;
              username = context.payload.inputs.username;
              labels = context.payload.inputs.labels ? context.payload.inputs.labels.split(',').map(l => l.trim()) : [];
            } else {
              prNumber = context.payload.pull_request.number;
              username = context.payload.pull_request.user.login;
              labels = context.payload.pull_request.labels.map(label => label.name);
              if (!context.payload.pull_request.merged) return;
            }

            try {
              execSync(`cd .github/scripts && node track-contribution.js "${username}" "${labels.join(',')}" ${prNumber}`, {
                stdio: 'inherit',
                env
              });
              console.log('‚úÖ Contribution tracking completed successfully');
            } catch (error) {
              console.error('‚ùå Contribution tracking failed:', error.message);
              core.setFailed(`Failed to track contribution: ${error.message}`);
            }

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add contributors.json CONTRIBUTORS.md
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update contributor leaderboard for PR #${{ github.event.pull_request.number || github.event.inputs.pr_number }}"
            git push
          fi

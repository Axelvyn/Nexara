name: Test Payload Structure

on:
  repository_dispatch:

jobs:
  test-payload:
    runs-on: ubuntu-latest
    steps:
      - name: Test payload structure
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log('=== PAYLOAD STRUCTURE TEST ===');
            
            // Check context payload
            console.log('Context payload keys:', Object.keys(context.payload || {}));
            
            if (context.payload && context.payload.client_payload) {
              console.log('✅ Client payload found');
              console.log('Client payload structure:');
              console.log(JSON.stringify(context.payload.client_payload, null, 2));
              
              // Test the new actor extraction method
              try {
                const actor = context.payload.client_payload.github.payload.comment.user.login;
                console.log('✅ Actor extracted successfully:', actor);
              } catch (error) {
                console.log('❌ Failed to extract actor:', error.message);
                
                // Try alternative paths
                console.log('Trying alternative paths...');
                if (context.payload.client_payload.github && context.payload.client_payload.github.actor) {
                  console.log('Alternative actor path 1:', context.payload.client_payload.github.actor);
                }
                if (context.payload.client_payload.slash_command && context.payload.client_payload.slash_command.actor) {
                  console.log('Alternative actor path 2:', context.payload.client_payload.slash_command.actor);
                }
              }
              
              // Test command extraction
              try {
                const command = context.payload.client_payload.slash_command.command;
                console.log('✅ Command extracted successfully:', command);
              } catch (error) {
                console.log('❌ Failed to extract command:', error.message);
              }
            } else {
              console.log('❌ No client_payload found');
            }
